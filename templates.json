[{
		"type": "container",
		"title": "letsencrypt",
		"description": "This container sets up an Nginx webserver and reverse proxy with php support and a built-in letsencrypt client that automates free SSL server certificate generation and renewal processes. It also contains fail2ban for intrusion prevention.\r\n  \r\n  Before running this container, make sure that the url and subdomains are properly forwarded to this container's host.\r\n  \r\n  - Port 443 on the internet side of the router should be forwarded to this container's port 443.\r\n  - If you need a dynamic dns provider, you can use the free provider duckdns.org where the url will be yoursubdomain.duckdns.org and the subdomains    can be www,ftp,cloud\r\n  - The container detects changes to url and subdomains, revokes existing certs and generates new ones during start. \r\n  - It also detects changes to the DHLEVEL parameter and replaces the dhparams file.\r\n  \r\n  - If you'd like to password protect your sites, you can use htpasswd. Run the following command on your host to generate the htpasswd file docker exec -it letsencrypt htpasswd -c /config/nginx/.htpasswd &lt;username&gt;",
		"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/letsencrypt.png",
		"image": "linuxserver/letsencrypt:latest",
		"category": [
			"Tools:",
			"Network:Web",
			"Status:Stable"
		],
		"ports": [
			"80/tcp",
			"443/tcp"
		],
		"volumes": [{
				"container": "/config",
				"bind": "/root/appdata/letsencrypt"
			}
		],
		"env": [{
				"name": "EMAIL",
				"label": "EMAIL",
				"set": "atribe13@gmail.com"
			}, {
				"name": "URL",
				"label": "URL",
				"set": "tribe.ddns.net"
			}, {
				"name": "SUBDOMAINS",
				"label": "SUBDOMAINS",
				"set": ""
			}, {
				"name": "ONLY_SUBDOMAINS",
				"label": "ONLY_SUBDOMAINS",
				"set": "false"
			}, {
				"name": "DHLEVEL",
				"label": "DHLEVEL",
				"set": "2048"
			}, {
				"name": "PUID",
				"label": "PUID",
				"set": "1001"
			}, {
				"name": "PGID",
				"label": "PGID",
				"set": "1001"
			}
		]
	}, {
		"type": "container",
		"title": "plexpy",
		"description": "PlexPy",
		"platform": "linux",
		"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plexpy-banner.png",
		"image": "linuxserver/plexpy:latest",
		"category": [
			"Network:Management"
		],
		"restart_policy": "always",
		"volumes": [{
				"container": "/config",
				"bind": "/root/appdata/plexpy"
			}, {
				"container": "/logs:ro",
				"bind": "/root/appdata/plex/Library/Application Support/Plex Media Server/Logs"
			}
		],
		"env": [{
				"name": "PUID",
				"label": "PUID",
				"set": "1001"
			}, {
				"name": "PGID",
				"label": "PGID",
				"set": "1001"
			}, {
				"name": "VERSION",
				"label": "VERSION",
				"set": "latest"
			}, {
				"TZ": "America/Denver"
			}
		],
		"ports": [
			"8181/tcp"
		]
	}, {
		"type": "container",
		"title": "apt-cacher-ng",
		"description": "Apt Cacher NG Container",
		"platform": "linux",
		"logo": "",
		"image": "sameersbn/apt-cacher-ng:latest",
		"category": [
			"Network:Management"
		],
		"restart_policy": "always",
		"volumes": [{
				"container": "/var/cache/apt-cacher-ng",
				"bind": "/root/appdata/apt-cacher-ng"
			}
		],
		"env": [{
				"name": "PUID",
				"label": "PUID",
				"set": "1001"
			}, {
				"name": "PGID",
				"label": "PGID",
				"set": "1001"
			}, {
				"name": "VERSION",
				"label": "VERSION",
				"set": "latest"
			}, {
				"TZ": "America/Denver"
			}
		],
		"ports": [
			"3142/tcp"
		]
	}, {
		"type": "container",
		"title": "plex",
		"description": "LinuxServer.io Plex Container",
		"platform": "linux",
		"logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-icon.png",
		"image": "linuxserver/plex:latest",
		"category": [
			"MediaServer:Video",
			"MediaServer:Music",
			"MediaServer:Photos"
		],
		"restart_policy": "always",
		"volumes": [{
				"container": "/config",
				"bind": "/root/appdata/plex"
			}, {
				"container": "/data/movies",
				"bind": "/mnt/pve/media/movies"
			}, {
				"container": "/data/tv",
				"bind": "/mnt/pve/media/tv"
			}, {
				"container": "/data/audiobooks",
				"bind": "/mnt/pve/media/audiobooks"
			}
		],
		"env": [{
				"name": "PUID",
				"label": "PUID",
				"set": "1001"
			}, {
				"name": "PGID",
				"label": "PGID",
				"set": "1001"
			}, {
				"name": "VERSION",
				"label": "VERSION",
				"set": "latest"
			}, {
				"TZ": "America/Denver"
			}
		],
		"ports": [
			"32400/tcp",
			"32400/udp",
			"32469/tcp",
			"32469/udp",
			"5353/udp",
			"1900/udp"
		]
	}, {
		"type": "container",
		"title": "Watchtower",
		"description": "Docker container updater",
		"categories": ["docker"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/registry.png",
		"image": "centurylink/watchtower",
		"volumes": [{
				"container": "/var/run/docker.sock",
				"bind": "/var/run/docker.sock"
			}
		]
	}, {
		"type": "container",
		"title": "Registry",
		"description": "Docker image registry",
		"categories": ["docker"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/registry.png",
		"image": "registry:latest",
		"ports": [
			"5000/tcp"
		],
		"volumes": ["/var/lib/registry"]
	}, {
		"type": "container",
		"title": "Nginx",
		"description": "High performance web server",
		"categories": ["webserver"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/nginx.png",
		"image": "nginx:latest",
		"ports": [
			"80/tcp",
			"443/tcp"
		],
		"volumes": ["/etc/nginx", "/usr/share/nginx/html"]
	}, {
		"type": "container",
		"title": "Httpd",
		"description": "Open-source HTTP server",
		"categories": ["webserver"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/httpd.png",
		"image": "httpd:latest",
		"ports": [
			"80/tcp"
		],
		"volumes": ["/usr/local/apache2/htdocs/"]
	}, {
		"type": "container",
		"title": "Caddy",
		"description": "HTTP/2 web server with automatic HTTPS",
		"categories": ["webserver"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/caddy.png",
		"image": "abiosoft/caddy:latest",
		"ports": [
			"80/tcp", "443/tcp", "2015/tcp"
		],
		"volumes": ["/root/.caddy"]
	}, {
		"type": "container",
		"title": "MySQL",
		"description": "The most popular open-source database",
		"categories": ["database"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/mysql.png",
		"image": "mysql:latest",
		"env": [{
				"name": "MYSQL_ROOT_PASSWORD",
				"label": "Root password"
			}
		],
		"ports": [
			"3306/tcp"
		],
		"volumes": ["/var/lib/mysql"]
	}, {
		"type": "container",
		"title": "MariaDB",
		"description": "Performance beyond MySQL",
		"categories": ["database"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/mariadb.png",
		"image": "mariadb:latest",
		"env": [{
				"name": "MYSQL_ROOT_PASSWORD",
				"label": "Root password"
			}
		],
		"ports": [
			"3306/tcp"
		],
		"volumes": ["/var/lib/mysql"]
	}, {
		"type": "container",
		"title": "PostgreSQL",
		"description": "The most advanced open-source database",
		"categories": ["database"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/postgres.png",
		"image": "postgres:latest",
		"env": [{
				"name": "POSTGRES_USER",
				"label": "Superuser"
			}, {
				"name": "POSTGRES_PASSWORD",
				"label": "Superuser password"
			}
		],
		"ports": [
			"5432/tcp"
		],
		"volumes": ["/var/lib/postgresql/data"]
	}, {
		"type": "container",
		"title": "Mongo",
		"description": "Open-source document-oriented database",
		"categories": ["database"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/mongo.png",
		"image": "mongo:latest",
		"ports": [
			"27017/tcp"
		],
		"volumes": ["/data/db"]
	}, {
		"type": "container",
		"title": "CockroachDB",
		"description": "An open-source, survivable, strongly consistent, scale-out SQL database",
		"categories": ["database"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/cockroachdb.png",
		"image": "cockroachdb/cockroach:latest",
		"ports": [
			"26257/tcp",
			"8080/tcp"
		],
		"volumes": ["/cockroach/cockroach-data"],
		"command": "start --insecure"
	}, {
		"type": "container",
		"title": "CrateDB",
		"description": "An open-source distributed SQL database",
		"categories": ["database"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/cratedb.png",
		"image": "crate:latest",
		"ports": [
			"4200/tcp",
			"4300/tcp"
		],
		"volumes": ["/data"]
	}, {
		"type": "container",
		"title": "Elasticsearch",
		"description": "Open-source search and analytics engine",
		"categories": ["database"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/elasticsearch.png",
		"image": "elasticsearch:latest",
		"ports": [
			"9200/tcp",
			"9300/tcp"
		],
		"volumes": ["/usr/share/elasticsearch/data"]
	}, {
		"type": "container",
		"title": "Gitlab CE",
		"description": "Open-source end-to-end software development platform",
		"note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
		"categories": ["development", "project-management"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/gitlab_ce.png",
		"image": "gitlab/gitlab-ce:latest",
		"ports": [
			"80/tcp",
			"443/tcp",
			"22/tcp"
		],
		"volumes": [{
				"container": "/etc/gitlab"
			}, {
				"container": "/var/log/gitlab"
			}, {
				"container": "/var/opt/gitlab"
			}
		]
	}, {
		"type": "container",
		"title": "Minio",
		"description": "A distributed object storage server built for cloud applications and devops",
		"categories": ["storage"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/minio.png",
		"image": "minio/minio:latest",
		"ports": [
			"9000/tcp"
		],
		"env": [{
				"name": "MINIO_ACCESS_KEY",
				"label": "Minio access key"
			}, {
				"name": "MINIO_SECRET_KEY",
				"label": "Minio secret key"
			}
		],
		"volumes": ["/export", "/root/.minio"],
		"command": "server /export"
	}, {
		"type": "container",
		"title": "Scality S3",
		"description": "Standalone AWS S3 protocol server",
		"categories": ["storage"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/scality-s3.png",
		"image": "scality/s3server",
		"ports": [
			"8000/tcp"
		],
		"env": [{
				"name": "SCALITY_ACCESS_KEY",
				"label": "Scality S3 access key"
			}, {
				"name": "SCALITY_SECRET_KEY",
				"label": "Scality S3 secret key"
			}
		],
		"volumes": ["/usr/src/app/localData", "/usr/src/app/localMetadata"]
	}, {
		"type": "container",
		"title": "SQL Server",
		"description": "Microsoft SQL Server on Linux",
		"categories": ["database"],
		"platform": "linux",
		"note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
		"logo": "https://cloudinovasi.id/assets/img/logos/microsoft.png",
		"image": "microsoft/mssql-server-linux:2017-GA",
		"ports": [
			"1433/tcp"
		],
		"env": [{
				"name": "ACCEPT_EULA",
				"set": "Y"
			}, {
				"name": "SA_PASSWORD",
				"label": "SA password"
			}
		]
	}, {
		"type": "container",
		"title": "SQL Server",
		"description": "Microsoft SQL Server for Windows containers",
		"categories": ["database"],
		"platform": "windows",
		"note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
		"logo": "https://cloudinovasi.id/assets/img/logos/microsoft.png",
		"image": "microsoft/mssql-server-windows:latest",
		"ports": [
			"1433/tcp"
		],
		"env": [{
				"name": "ACCEPT_EULA",
				"set": "Y"
			}, {
				"name": "sa_password",
				"label": "SA password"
			}
		],
		"volumes": ["C:/temp/"]
	}, {
		"type": "container",
		"title": "SQL Server Express",
		"description": "Microsoft SQL Server Express for Windows containers",
		"categories": ["database"],
		"platform": "windows",
		"note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
		"logo": "https://cloudinovasi.id/assets/img/logos/microsoft.png",
		"image": "microsoft/mssql-server-windows-express:latest",
		"ports": [
			"1433/tcp"
		],
		"env": [{
				"name": "ACCEPT_EULA",
				"set": "Y"
			}, {
				"name": "sa_password",
				"label": "SA password"
			}
		],
		"volumes": ["C:/temp/"]
	}, {
		"type": "container",
		"title": "Solr",
		"description": "Open-source enterprise search platform",
		"categories": ["search-engine"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/solr.png",
		"image": "solr:latest",
		"ports": [
			"8983/tcp"
		],
		"volumes": ["/opt/solr/mydata"]
	}, {
		"type": "container",
		"title": "Redis",
		"description": "Open-source in-memory data structure store",
		"categories": ["database"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/redis.png",
		"image": "redis:latest",
		"ports": [
			"6379/tcp"
		],
		"volumes": ["/data"]
	}, {
		"type": "container",
		"title": "RabbitMQ",
		"description": "Highly reliable enterprise messaging system",
		"categories": ["messaging"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/rabbitmq.png",
		"image": "rabbitmq:latest",
		"ports": [
			"5671/tcp",
			"5672/tcp"
		],
		"volumes": ["/var/lib/rabbitmq"]
	}, {
		"type": "container",
		"title": "Ghost",
		"description": "Free and open-source blogging platform",
		"categories": ["blog"],
		"note": "Access the blog management interface under <code>/ghost/</code>.",
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/ghost.png",
		"image": "ghost:latest",
		"ports": [
			"2368/tcp"
		],
		"volumes": ["/var/lib/ghost/content"]
	}, {
		"type": "container",
		"title": "Plesk",
		"description": "WebOps platform and hosting control panel",
		"categories": ["CMS"],
		"platform": "linux",
		"note": "Default credentials: admin / changeme",
		"logo": "https://cloudinovasi.id/assets/img/logos/plesk.png",
		"image": "plesk/plesk:preview",
		"ports": [
			"21/tcp", "80/tcp", "443/tcp", "8880/tcp", "8443/tcp", "8447/tcp"
		]
	}, {
		"type": "container",
		"title": "WordPress",
		"description": "A free and open-source CMS",
		"categories": ["CMS"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/wordpress.png",
		"image": "wordpress:latest",
		"env": [{
				"name": "WORDPRESS_DB_HOST",
				"label": "MySQL database host",
				"type": "container"
			}, {
				"name": "WORDPRESS_DB_PASSWORD",
				"label": "Database password"
			}
		],
		"ports": [
			"80/tcp"
		],
		"volumes": ["/var/www/html"]
	}, {
		"type": "container",
		"title": "Joomla",
		"description": "Another free and open-source CMS",
		"categories": ["CMS"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/joomla.png",
		"image": "joomla:latest",
		"env": [{
				"name": "JOOMLA_DB_HOST",
				"label": "MySQL database host",
				"type": "container"
			}, {
				"name": "JOOMLA_DB_PASSWORD",
				"label": "Database password"
			}
		],
		"ports": [
			"80/tcp"
		],
		"volumes": ["/var/www/html"]
	}, {
		"type": "container",
		"title": "Drupal",
		"description": "Open-source content management framework",
		"categories": ["CMS"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/drupal.png",
		"image": "drupal:latest",
		"ports": [
			"80/tcp"
		],
		"volumes": ["/var/www/html"]
	}, {
		"type": "container",
		"title": "Plone",
		"description": "A free and open-source CMS built on top of Zope",
		"categories": ["CMS"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/plone.png",
		"image": "plone:latest",
		"ports": [
			"8080/tcp"
		],
		"volumes": ["/data"]
	}, {
		"type": "container",
		"title": "Magento 2",
		"description": "Open-source e-commerce platform",
		"categories": ["CMS"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/magento.png",
		"image": "alankent/gsd:latest",
		"ports": [
			"80/tcp",
			"3000/tcp",
			"3001/tcp"
		],
		"volumes": ["/var/www/html/"]
	}, {
		"type": "container",
		"title": "Mautic",
		"description": "Open-source marketing automation platform",
		"categories": ["marketing"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/mautic.png",
		"image": "mautic/mautic:latest",
		"env": [{
				"name": "MAUTIC_DB_HOST",
				"label": "MySQL database host",
				"type": "container"
			}, {
				"name": "MAUTIC_DB_PASSWORD",
				"label": "Database password"
			}
		],
		"ports": [
			"80/tcp"
		],
		"volumes": ["/var/www/html"]
	}, {
		"type": "container",
		"title": "Wowza",
		"description": "Streaming media server",
		"categories": ["streaming"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/wowza.png",
		"image": "sameersbn/wowza:4.1.2-8",
		"env": [{
				"name": "WOWZA_ACCEPT_LICENSE",
				"label": "Agree to Wowza EULA",
				"set": "yes"
			}, {
				"name": "WOWZA_KEY",
				"label": "License key"
			}
		],
		"ports": [
			"1935/tcp",
			"8086/tcp",
			"8087/tcp",
			"8088/tcp"
		],
		"volumes": ["/var/lib/wowza"]
	}, {
		"type": "container",
		"title": "Jenkins",
		"description": "Open-source continuous integration tool",
		"categories": ["continuous-integration"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/jenkins.png",
		"image": "jenkins/jenkins:lts",
		"ports": [
			"8080/tcp",
			"50000/tcp"
		],
		"env": [{
				"name": "JENKINS_OPTS",
				"label": "Jenkins options"
			}
		],
		"volumes": ["/var/jenkins_home"]
	}, {
		"type": "container",
		"title": "Redmine",
		"description": "Open-source project management tool",
		"categories": ["project-management"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/redmine.png",
		"image": "redmine:latest",
		"ports": [
			"3000/tcp"
		],
		"volumes": ["/usr/src/redmine/files"]
	}, {
		"type": "container",
		"title": "Odoo",
		"description": "Open-source business apps",
		"categories": ["project-management"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/odoo.png",
		"image": "odoo:latest",
		"env": [{
				"name": "HOST",
				"label": "PostgreSQL database host",
				"type": "container"
			}, {
				"name": "USER",
				"label": "Database user"
			}, {
				"name": "PASSWORD",
				"label": "Database password"
			}
		],
		"ports": [
			"8069/tcp"
		],
		"volumes": ["/var/lib/odoo", "/mnt/extra-addons"]
	}, {
		"type": "container",
		"title": "Urbackup",
		"description": "Open-source network backup",
		"categories": ["backup"],
		"platform": "linux",
		"note": "This application web interface is exposed on the port 55414 inside the container.",
		"logo": "https://cloudinovasi.id/assets/img/logos/urbackup.png",
		"image": "cfstras/urbackup",
		"ports": [
			"55413/tcp", "55414/tcp", "55415/tcp", "35622/tcp"
		],
		"volumes": ["/var/urbackup"]
	}, {
		"type": "container",
		"title": "CommandBox",
		"description": "ColdFusion (CFML) CLI",
		"categories": ["development"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/ortussolutions-commandbox.png",
		"image": "ortussolutions/commandbox:latest",
		"env": [{
				"name": "CFENGINE",
				"set": "lucee@4.5"
			}
		],
		"ports": [
			"8080/tcp", "8443/tcp"
		]
	}, {
		"type": "container",
		"title": "ContentBox",
		"description": "Open-source modular CMS",
		"categories": ["CMS"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/ortussolutions-contentbox.png",
		"image": "ortussolutions/contentbox:latest",
		"env": [{
				"name": "express",
				"set": "true"
			}, {
				"name": "install",
				"set": "true"
			}, {
				"name": "CFENGINE",
				"set": "lucee@4.5"
			}
		],
		"ports": [
			"8080/tcp", "8443/tcp"
		],
		"volumes": ["/data/contentbox/db", "/app/includes/shared/media"]
	}, {
		"type": "stack",
		"title": "OpenFaaS",
		"description": "Serverless functions made simple",
		"note": "Deploys the API gateway and sample functions. You can access the UI on port 8080.",
		"categories": ["serverless"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/openfaas.png",
		"repository": {
			"url": "https://github.com/openfaas/faas",
			"stackfile": "docker-compose.yml"
		}
	}, {
		"type": "stack",
		"title": "CockroachDB",
		"description": "CockroachDB cluster",
		"note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
		"categories": ["database"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/cockroachdb.png",
		"repository": {
			"url": "https://github.com/portainer/templates",
			"stackfile": "stacks/cockroachdb/docker-stack.yml"
		}
	}, {
		"type": "stack",
		"title": "Wordpress",
		"description": "Wordpress setup with a MySQL database",
		"note": "Deploys a Wordpress instance connected to a MySQL database.",
		"categories": ["CMS"],
		"platform": "linux",
		"logo": "https://cloudinovasi.id/assets/img/logos/wordpress.png",
		"repository": {
			"url": "https://github.com/portainer/templates",
			"stackfile": "stacks/wordpress/docker-stack.yml"
		},
		"env": [{
				"name": "MYSQL_ROOT_PASSWORD",
				"label": "Database root password",
				"description": "Password used by the MySQL root user."
			}
		]
	}
]
